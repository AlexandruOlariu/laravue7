{
    "openapi": "3.0.0",
    "info": {
        "title": "Swagger flowerstore",
        "description": "This is a sample server flowerstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "apiteam@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost/laravue7/public/",
            "description": "OpenApi host"
        }
    ],
    "paths": {
        "/flowers/": {
            "get": {
                "tags": [
                    "flower"
                ],
                "summary": "Get all existing flowers",
                "description": "Home page with flowers",
                "operationId": "App\\Http\\Controllers\\FlowersController::index",
                "responses": {
                    "200": {
                        "description": "Succsess on loading flowers"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/flowers": {
            "post": {
                "tags": [
                    "flower"
                ],
                "summary": "Add a new flower to the store",
                "description": "",
                "operationId": "store",
                "requestBody": {
                    "description": "Flower object that needs to be added to the store",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Flower"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Flower"
                            }
                        }
                    }
                },
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    },
                    "200": {
                        "description": "Success on insert"
                    }
                },
                "security": [
                    {
                        "flowerstore_auth": [
                            "write:flowers",
                            "read:flowers"
                        ]
                    }
                ]
            }
        },
        "/flowers/{flower}": {
            "post": {
                "tags": [
                    "flower"
                ],
                "summary": "Updates a flower in the store with form data",
                "description": "",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "flower",
                        "in": "path",
                        "description": "ID of flower that needs to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Updated name of the flower",
                                        "type": "string"
                                    },
                                    "price": {
                                        "description": "Updated price of the flower",
                                        "type": "string"
                                    },
                                    "url": {
                                        "description": "Updated url of the flower",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    },
                                    "_method": {
                                        "description": "te rog sa scrii 'PUT' aici",
                                        "type": "string",
                                        "default": "PUT"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    },
                    "200": {
                        "description": "Success of edit"
                    }
                },
                "security": [
                    {
                        "flowerstore_auth": [
                            "write:flowers",
                            "read:flowers"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "flower"
                ],
                "summary": "Deletes a flower",
                "description": "",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "flower",
                        "in": "path",
                        "description": "Flower id to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Flower not found"
                    }
                },
                "security": [
                    {
                        "flowerstore_auth": [
                            "write:flowers",
                            "read:flowers"
                        ]
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "ApiResponse": {
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "type": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Flower": {
                "title": "Flower model",
                "description": "Flower model",
                "required": [
                    "name",
                    "price"
                ],
                "properties": {
                    "name": {
                        "title": "Flower name",
                        "description": "Flower name",
                        "type": "string",
                        "example": "ghiocel"
                    },
                    "price": {
                        "title": "Flower price",
                        "description": "Flower price",
                        "type": "string",
                        "example": "10"
                    },
                    "url": {
                        "title": "Flower url",
                        "description": "Flower url",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "binary"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Flower"
                }
            },
            "Tag": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Tag"
                }
            }
        },
        "requestBodies": {
            "Flower": {
                "description": "Flower object that needs to be added to the db",
                "required": true,
                "content": {
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/Flower"
                        }
                    },
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Flower"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "api_key": {
                "type": "apiKey",
                "name": "api_key",
                "in": "header"
            },
            "flowerstore_auth": {
                "type": "oauth2",
                "flows": {
                    "implicit": {
                        "authorizationUrl": "http://flowerstore.swagger.io/oauth/dialog",
                        "scopes": {
                            "read:flowers": "read your flowers",
                            "write:flowers": "modify flowers in your account"
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "flower",
            "description": "Everything about your flowers",
            "externalDocs": {
                "description": "Find out more",
                "url": "http://swagger.io"
            }
        },
        {
            "name": "store",
            "description": "Access to flowerstore orders"
        },
        {
            "name": "user",
            "description": "Operations about user",
            "externalDocs": {
                "description": "Find out more about our store",
                "url": "http://swagger.io"
            }
        }
    ],
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    }
}